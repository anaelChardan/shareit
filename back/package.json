{
  "name": "shareit-back",
  "version": "1.0.0",
  "main": "./dist/index.js",
  "license": "MIT",
  "scripts": {
    "build": "npm run check-types && npm run build:tsup",
    "check-types": "tsc --noEmit",
    "clean": "rm -rf ./dist",
    "dev:in_memory": "NODE_ENV=IN_MEMORY tsup src/index.ts --watch --onSuccess 'NODE_ENV=IN_MEMORY node dist/index.js'",
    "dev:production": "NODE_ENV=PRODUCTION tsup src/index.ts --watch --onSuccess 'NODE_ENV=PRODUCTION node dist/index.js'",
    "parse": "node dist/src/parser.js",
    "build:tsup": "tsup src/index.ts",
    "dev": "npm run dev:production",
    "local:setup": "cp .env.local .env",
    "lint": "eslint .",
    "lint-staged": "lint-staged",
    "lint-back": "lint-staged",
    "lint:fix": "eslint . --fix",
    "prepare": "cd .. && husky install back/.husky",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "start:in_memory": "NODE_ENV=IN_MEMORY node ./dist/index.js",
    "start:production": "NODE_ENV=PRODUCTION node ./dist/index.js",
    "start": "npm run start:production",
    "start:docker": "docker compose -f docker-compose.yaml up -d",
    "publish-client": "npm run build && cd ./client && npm install --ignore-scripts && npm run build && npm publish",
    "test:unit": "NODE_ENV=test TZ=UTC && jest --config jest.config.js --selectProjects unit --passWithNoTests",
    "test:integration": "NODE_ENV=integration TZ=UTC && jest --config jest.config.js --runInBand --selectProjects integration --passWithNoTests",
    "test:service": "NODE_ENV=SERVICE_TEST TZ=UTC && jest --config jest.config.js --runInBand --selectProjects service --passWithNoTests",
    "db:init": "npx prisma db push",
    "db:destroy": "docker compose down --volumes",
    "db:migration:migrate": "npx prisma migrate dev --name",
    "db:schema:push": "npx prisma db push",
    "db:prisma": "npx prisma",
    "refresh-all": "npm run  && npm run clean && npm run local:setup && npm run prepare && npm run build && npm run start:docker && sleep 10 && npm run db:prisma migrate reset && npm run start"
  },
  "prisma": {
    "seed": "ts-node ./tests/seed/index.ts"
  },
  "dependencies": {
    "@faker-js/faker": "^8.0.2",
    "@fastify/cors": "^8.3.0",
    "@fastify/swagger": "^8.8.0",
    "@fastify/swagger-ui": "^1.9.2",
    "@prisma/client": "4.13.0",
    "@ts-rest/core": "^3.26.3",
    "@ts-rest/fastify": "^3.26.3",
    "@ts-rest/open-api": "^3.26.4",
    "config": "^3.3.9",
    "fastify": "^4.15.0",
    "neverthrow": "^6.0.0",
    "prisma": "^4.13.0",
    "signale": "^1.4.0",
    "ts-brand": "^0.0.2",
    "tsup": "^7.2.0",
    "uuid": "^9.0.0",
    "yaml": "^2.2.2",
    "zod": "^3.21.4"
  },
  "devDependencies": {
    "@swc/core": "^1.3.69",
    "@swc/helpers": "^0.5.1",
    "@swc/jest": "^0.2.26",
    "@types/config": "3.3.0",
    "@types/jest": "^29.5.1",
    "@types/node": "^18.15.11",
    "@types/signale": "^1.4.4",
    "@types/uuid": "9.0.1",
    "@typescript-eslint/eslint-plugin": "5.58.0",
    "@typescript-eslint/parser": "5.58.0",
    "eslint": "8.38.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-config-airbnb-typescript": "17.0.0",
    "eslint-config-prettier": "8.8.0",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-prettier": "4.2.1",
    "husky": "8.0.3",
    "jest": "^29.6.1",
    "lint-staged": "13.2.1",
    "prettier": "2.8.7",
    "ts-node": "^10.9.1",
    "typescript": "^5.0.4"
  },
  "volta": {
    "node": "18.17.0",
    "npm": "9.8.1"
  },
  "lint-staged": {
    "*.ts": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.js": [
      "prettier --write"
    ],
    "*.md": [
      "prettier --write"
    ]
  }
}
